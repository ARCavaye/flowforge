# Generated by Django 5.2.7 on 2025-10-27 23:08

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0003_alter_venue_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Team name",
                        max_length=150,
                        unique=True,
                        verbose_name="Team Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the team",
                        verbose_name="Team Description",
                    ),
                ),
            ],
        ),
        migrations.AlterField(
            model_name="activity",
            name="coachingPoints",
            field=models.TextField(
                blank=True,
                help_text="Key coaching points for the activity",
                verbose_name="Coaching Points",
            ),
        ),
        migrations.AlterField(
            model_name="activity",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Detailed description of the activity",
                verbose_name="Activity Description",
            ),
        ),
        migrations.AlterField(
            model_name="activity",
            name="difficultyLevel",
            field=models.IntegerField(
                blank=True,
                default=1,
                help_text="1 (easy) to 5 (hard)",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(5),
                ],
                verbose_name="Difficulty Level",
            ),
        ),
        migrations.AlterField(
            model_name="activity",
            name="durationMinutes",
            field=models.IntegerField(
                blank=True,
                help_text="Estimated duration of the activity in minutes",
                null=True,
                verbose_name="Duration (minutes)",
            ),
        ),
        migrations.AlterField(
            model_name="activity",
            name="name",
            field=models.CharField(
                help_text="Name of the activity",
                max_length=100,
                verbose_name="Activity Name",
            ),
        ),
        migrations.AlterField(
            model_name="activity",
            name="safetyConsiderations",
            field=models.TextField(
                blank=True,
                help_text="Safety considerations for the activity",
                verbose_name="Safety Considerations",
            ),
        ),
        migrations.AlterField(
            model_name="activityequipment",
            name="activity",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="core.activity",
                verbose_name="Activity",
            ),
        ),
        migrations.AlterField(
            model_name="activityequipment",
            name="equipment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="core.equipment",
                verbose_name="Equipment",
            ),
        ),
        migrations.AlterField(
            model_name="activityequipment",
            name="quantity_needed",
            field=models.PositiveIntegerField(
                default=1,
                help_text="Quantity of this equipment needed for the activity",
                verbose_name="Quantity Needed",
            ),
        ),
        migrations.AlterField(
            model_name="activityimage",
            name="activity",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="core.activity",
                verbose_name="Activity",
            ),
        ),
        migrations.AlterField(
            model_name="activityimage",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Description of the image",
                verbose_name="Description",
            ),
        ),
        migrations.AlterField(
            model_name="activityimage",
            name="imageUrl",
            field=models.ImageField(
                help_text="Image of the activity",
                upload_to="activity_images/",
                verbose_name="Image",
            ),
        ),
        migrations.AlterField(
            model_name="equipment",
            name="activities",
            field=models.ManyToManyField(
                related_name="equipment_items",
                through="core.ActivityEquipment",
                to="core.activity",
                verbose_name="Activities",
            ),
        ),
        migrations.AlterField(
            model_name="equipment",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Detailed description of the equipment",
                verbose_name="Equipment Description",
            ),
        ),
        migrations.AlterField(
            model_name="equipment",
            name="name",
            field=models.CharField(
                help_text="Name of the equipment",
                max_length=100,
                verbose_name="Equipment Name",
            ),
        ),
        migrations.AlterField(
            model_name="equipment",
            name="quantityAvailable",
            field=models.IntegerField(
                blank=True,
                help_text="Quantity of this equipment available",
                null=True,
                verbose_name="Quantity Available",
            ),
        ),
        migrations.AlterField(
            model_name="equipment",
            name="safetyInstructions",
            field=models.TextField(
                blank=True,
                help_text="Safety instructions for using the equipment",
                verbose_name="Safety Instructions",
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="coordinates",
            field=models.CharField(
                blank=True,
                help_text="GPS coordinates of the location",
                max_length=50,
                verbose_name="Coordinates",
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Detailed description of the location",
                verbose_name="Location Description",
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="features",
            field=models.TextField(
                blank=True,
                help_text="Notable features of the location",
                verbose_name="Features",
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="name",
            field=models.CharField(
                help_text="Name of the location within the venue",
                max_length=100,
                verbose_name="Location Name",
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="terrainDifficulty",
            field=models.IntegerField(
                blank=True,
                default=1,
                help_text="1 (easy) to 5 (hard)",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(5),
                ],
                verbose_name="Terrain Difficulty",
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="terrainType",
            field=models.CharField(
                blank=True,
                help_text="Type of terrain (e.g., paved, gravel, grass)",
                max_length=50,
                verbose_name="Terrain Type",
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="venue",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="core.venue",
                verbose_name="Venue",
            ),
        ),
        migrations.AlterField(
            model_name="locationimage",
            name="description",
            field=models.TextField(blank=True, verbose_name="Description"),
        ),
        migrations.AlterField(
            model_name="locationimage",
            name="imageUrl",
            field=models.ImageField(
                help_text="Image of the location",
                upload_to="location_images/",
                verbose_name="Image",
            ),
        ),
        migrations.AlterField(
            model_name="locationimage",
            name="location",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="core.location",
                verbose_name="Location",
            ),
        ),
        migrations.AlterField(
            model_name="venue",
            name="address",
            field=models.CharField(
                help_text="Physical address of the venue",
                max_length=255,
                verbose_name="Venue Address",
            ),
        ),
        migrations.AlterField(
            model_name="venue",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Detailed description of the venue",
                verbose_name="Venue Description",
            ),
        ),
        migrations.AlterField(
            model_name="venue",
            name="email",
            field=models.EmailField(
                blank=True,
                help_text="Contact email address",
                max_length=254,
                verbose_name="Contact Email",
            ),
        ),
        migrations.AlterField(
            model_name="venue",
            name="phone",
            field=models.CharField(
                blank=True,
                help_text="Contact phone number",
                max_length=15,
                verbose_name="Contact Phone",
            ),
        ),
        migrations.AlterField(
            model_name="venue",
            name="riskAssessmentUrl",
            field=models.URLField(
                blank=True,
                help_text="URL to the venue's risk assessment document",
                verbose_name="Risk Assessment URL",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="owner_team",
            field=models.ForeignKey(
                blank=True,
                help_text="Team that owns this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_owned_objects",
                to="core.team",
                verbose_name="Owner Team",
            ),
        ),
        migrations.AddField(
            model_name="activityequipment",
            name="owner_team",
            field=models.ForeignKey(
                blank=True,
                help_text="Team that owns this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_owned_objects",
                to="core.team",
                verbose_name="Owner Team",
            ),
        ),
        migrations.AddField(
            model_name="activityimage",
            name="owner_team",
            field=models.ForeignKey(
                blank=True,
                help_text="Team that owns this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_owned_objects",
                to="core.team",
                verbose_name="Owner Team",
            ),
        ),
        migrations.AddField(
            model_name="equipment",
            name="owner_team",
            field=models.ForeignKey(
                blank=True,
                help_text="Team that owns this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_owned_objects",
                to="core.team",
                verbose_name="Owner Team",
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="owner_team",
            field=models.ForeignKey(
                blank=True,
                help_text="Team that owns this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_owned_objects",
                to="core.team",
                verbose_name="Owner Team",
            ),
        ),
        migrations.AddField(
            model_name="locationimage",
            name="owner_team",
            field=models.ForeignKey(
                blank=True,
                help_text="Team that owns this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_owned_objects",
                to="core.team",
                verbose_name="Owner Team",
            ),
        ),
        migrations.AddField(
            model_name="venue",
            name="owner_team",
            field=models.ForeignKey(
                blank=True,
                help_text="Team that owns this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_owned_objects",
                to="core.team",
                verbose_name="Owner Team",
            ),
        ),
        migrations.CreateModel(
            name="TeamMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("leader", "Session Leader"),
                            ("planner", "Session Planner"),
                            ("manager", "Team Manager"),
                        ],
                        default="leader",
                        max_length=20,
                        verbose_name="Role",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="core.team",
                        verbose_name="Team",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_memberships",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "unique_together": {("team", "user")},
            },
        ),
    ]
